
const express = require('express')
const app = express()

const port = 8765

var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "",
  database: "data"
});

con.connect(function(err) {
  if (err) throw err;
  console.log("Connected!");
});

function convertToCSV(arr) {
  const array = [Object.keys(arr[0])].concat(arr)

  return array.map(it => {
    return Object.values(it).toString() 
  }).join('<br/>')
}

app.get('/energy/api/ActualTotalLoad/:areaname/:resolution/:d/:year-:mon-:day/', (req, res) => {
	if (req.query.format == 'csv'){ //csv format
		if(req.params.d == 'year') {
			let sql='1c';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,1c,csv'); 
			});
		}
		else if(req.params.d == 'month') {
			let sql='1b';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,1b,csv'); 
			});
		}
		else if(req.params.d == 'date')  {
			let sql='SELECT "entso-e" AS Source, "ActualTotalLoad" AS Datasate, AreaName, AreaTypeCodeText, MapCodeText, ResolutionCodeText, Year, Month, Day, DateTime, TotalLoadValue, UpdateTime FROM ActualTotalLoad, ResolutionCode, AreaTypeCode, MapCode WHERE AreaName=' +"'"+req.params.areaname+"'"+ ' AND ResolutionCode.Id = ResolutionCodeId AND ResolutionCodeText=' + "'" +req.params.resolution+"'" + ' AND MapCode.Id=MapCodeId AND AreaTypeCode.Id=AreaTypeCodeId AND Year=' + req.params.year + ' AND Month=' + req.params.mon + ' AND Day=' + req.params.day + ' ORDER BY DateTime ASC';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,1a,csv'); 
			});
		}
		else res.status(404).send('ERROR 404')} 
	else {  //JSON format
		if(req.params.d == 'year') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT "entso-e" AS Source, "ActualTotalLoad" AS Datasate, AreaName, AreaTypeCodeText, MapCodeText, ResolutionCodeText, Year, Month, Day, DateTime, TotalLoadValue, UpdateTime FROM ActualTotalLoad, ResolutionCode, AreaTypeCode, MapCode WHERE AreaName=' +"'"+req.params.areaname+"'"+ ' AND ResolutionCode.Id = ResolutionCodeId AND ResolutionCodeText=' + "'" +req.params.resolution+"'" + ' AND MapCode.Id=MapCodeId AND AreaTypeCode.Id=AreaTypeCodeId AND Year=' + req.params.year + ' AND Month=' + req.params.mon + ' AND Day=' + req.params.day + ' ORDER BY DateTime ASC';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned,1a,json');
			});
		}
		else res.status(404).send('ERROR 404')
	}
});

app.get('/energy/api/DayAheadTotalLoadForecast/:areaname/:productiontype/:resolution/:d/:date/', (req, res) => {
	if (req.query.format == 'csv'){ //csv format
		if(req.params.d == 'year') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
	else {  //JSON format
		if(req.params.d == 'year')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
});

app.get('/energy/api/AggregatedGenerationPerType/:areaname/:resolution/:d/:date/', (req, res) => {
	if (req.query.format == 'csv'){ //csv format
		if(req.params.d == 'year') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
	else {  //JSON format
		if(req.params.d == 'year')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
});

app.get('/energy/api/ActualvsForecast/:areaname/:resolution/:d/:date/', (req, res) => {
	if (req.query.format == 'csv'){ //csv format
		if(req.params.d == 'year')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		var csv=convertToCSV(result);
        		res.send(csv);
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
	else {  //JSON format
		if(req.params.d == 'year') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				res.send(result);
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
});

app.listen(port, () => console.log(`Example app listening on port ${port}!`))
