
const express = require('express')
const app = express()

const port = 8765

var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "",
  database: "data"
});

con.connect(function(err) {
  if (err) throw err;
  console.log("Connected!");
});

function convertToCSV(arr) {
  const array = [Object.keys(arr[0])].concat(arr)

  return array.map(it => {
    return Object.values(it).toString() 
  }).join('<br/>')
}

app.get('/energy/api/ActualTotalLoad/:areaname/:resolution/:d/:year-:mon-:day/', (req, res) => {
	if (req.query.format == 'csv'){ //csv format
		if(req.params.d == 'year') {
			let sql='SELECT "entso-e" AS Source, "ActualTotalLoad" AS Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, sum(TotalLoadValue) as ActualTotalLoadValue FROM ActualTotalLoad, ResolutionCode, AreaTypeCode, MapCode WHERE AreaName=' +"'"+req.params.areaname+"'"+ ' AND ResolutionCodeText=' + "'" +req.params.resolution+"'" + ' AND ResolutionCode.Id = ResolutionCodeId AND MapCode.Id=MapCodeId AND AreaTypeCode.Id=AreaTypeCodeId AND Year =' + req.params.year + ' GROUP BY ActualTotalLoad.Month';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,1c,csv'); 
			});
		}
		else if(req.params.d == 'month') {
			let sql='SELECT "entso-e" AS Source, "0ActualTotalLoad" AS Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, sum(TotalLoadValue) as ActualTotalLoadValue FROM ActualTotalLoad, ResolutionCode, AreaTypeCode, MapCode WHERE AreaName=' +"'"+req.params.areaname+"'"+ ' AND ResolutionCodeText=' + "'" +req.params.resolution+"'" + ' AND ResolutionCode.Id = ResolutionCodeId AND MapCode.Id=MapCodeId AND AreaTypeCode.Id=AreaTypeCodeId AND Month =' + req.params.mon + ' AND Year =' + req.params.year + ' GROUP BY ActualTotalLoad.Day';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,1b,csv'); 
			});
		}
		else if(req.params.d == 'date')  {
			let sql='SELECT "entso-e" AS Source, "ActualTotalLoad" AS Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, DateTime as DateTimeUTC, TotalLoadValue as ActualTotalLoadValue, UpdateTime as UpdateTimeUTC FROM ActualTotalLoad, ResolutionCode, AreaTypeCode, MapCode WHERE AreaName=' +"'"+req.params.areaname+"'"+ ' AND ResolutionCode.Id = ResolutionCodeId AND ResolutionCodeText=' + "'" +req.params.resolution+"'" + ' AND MapCode.Id=MapCodeId AND AreaTypeCode.Id=AreaTypeCodeId AND Year=' + req.params.year + ' AND Month=' + req.params.mon + ' AND Day=' + req.params.day + ' ORDER BY DateTime ASC';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,1a,csv'); 
			});
		}
		else res.status(404).send('ERROR 404')} 
	else {  //JSON format
		if(req.params.d == 'year') {
			let sql='SELECT "entso-e" AS Source, "ActualTotalLoad" AS Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, sum(TotalLoadValue) as ActualTotalLoadValue FROM ActualTotalLoad, ResolutionCode, AreaTypeCode, MapCode WHERE AreaName=' +"'"+req.params.areaname+"'"+ ' AND ResolutionCodeText=' + "'" +req.params.resolution+"'" + ' AND ResolutionCode.Id = ResolutionCodeId AND MapCode.Id=MapCodeId AND AreaTypeCode.Id=AreaTypeCodeId AND Year =' + req.params.year + ' GROUP BY ActualTotalLoad.Month';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month') {
			let sql='SELECT "entso-e" AS Source, "0ActualTotalLoad" AS Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, sum(TotalLoadValue) as ActualTotalLoadValue FROM ActualTotalLoad, ResolutionCode, AreaTypeCode, MapCode WHERE AreaName=' +"'"+req.params.areaname+"'"+ ' AND ResolutionCodeText=' + "'" +req.params.resolution+"'" + ' AND ResolutionCode.Id = ResolutionCodeId AND MapCode.Id=MapCodeId AND AreaTypeCode.Id=AreaTypeCodeId AND Month =' + req.params.mon + ' AND Year =' + req.params.year + ' GROUP BY ActualTotalLoad.Day';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT "entso-e" AS Source, "ActualTotalLoad" AS Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, DateTime as DateTimeUTC, TotalLoadValue as ActualTotalLoadValue, UpdateTime as UpdateTimeUTC FROM ActualTotalLoad, ResolutionCode, AreaTypeCode, MapCode WHERE AreaName=' +"'"+req.params.areaname+"'"+ ' AND ResolutionCode.Id = ResolutionCodeId AND ResolutionCodeText=' + "'" +req.params.resolution+"'" + ' AND MapCode.Id=MapCodeId AND AreaTypeCode.Id=AreaTypeCodeId AND Year=' + req.params.year + ' AND Month=' + req.params.mon + ' AND Day=' + req.params.day + ' ORDER BY DateTime ASC';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned,1a,json');
			});
		}
		else res.status(404).send('ERROR 404')
	}
});

app.get('/energy/api/DayAheadTotalLoadForecast/:areaname/:productiontype/:resolution/:d/:date/', (req, res) => {
	if (req.query.format == 'csv'){ //csv format
		if(req.params.d == 'year') {
			if (req.params.productiontype != "AllTypes")
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, ProductionTypeText as ProductionType, sum(ActualGenerationOutput) as ActualGenerationOutputByMonthValue FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND ProductionTypeText= '+ "'" +req.params.productiontype+"'" +' AND Year ='+ req.params.year + ' GROUP BY AggregatedGenerationPerType.Month';
			else 
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, ProductionTypeText as ProductionType, sum(ActualGenerationOutput) as ActualGenerationOutputByMonthValue FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND Year ='+ req.params.year + ' GROUP BY AggregatedGenerationPerType.Month, ProductionType.Id';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,2c,csv');
			});
		}
		else if(req.params.d == 'month') {
			if (req.params.productiontype != "AllTypes")
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, ProductionTypeText as ProductionType, sum(ActualGenerationOutput) as ActualGenerationOutputByDayValue FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND ProductionTypeText='+ "'" +req.params.productiontype+"'" +' AND Year ='+ req.params.year + ' AND Month=' + req.params.day+ ' GROUP BY AggregatedGenerationPerType.Day';
			else 
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, ProductionTypeText as ProductionType, sum(ActualGenerationOutput) as ActualGenerationOutputByDayValue FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND Year ='+ req.params.year + ' AND Month=' + req.params.day+ ' GROUP BY AggregatedGenerationPerType.Day, ProductionType.Id';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,2b,csv');
			});
		}
		else if(req.params.d == 'date') {
			if (req.params.productiontype != "AllTypes")
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, DateTime as DateTimeUTC, ProductionTypeText as ProductionType, ActualGenerationOutput as ActualGenerationOutputValue, UpdateTime as UpdateTimeUTC FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND ProductionTypeText='+ "'" +req.params.productiontype+"'" +' AND Year ='+ req.params.year + ' AND Month='+ req.params.mon +' AND Day=' + req.params.day + ' ORDER BY DateTime ASC';
			else 
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, DateTime as DateTimeUTC, ProductionTypeText as ProductionType, ActualGenerationOutput as ActualGenerationOutputValue, UpdateTime as UpdateTimeUTC FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND Year ='+ req.params.year + ' AND Month='+ req.params.mon +' AND Day=' + req.params.day + ' ORDER BY ProductionType.Id';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned,2a,csv');
			});
		}
		else res.status(404).send('ERROR 404')}
	else {  //JSON format
		if(req.params.d == 'year')  {
			if (req.params.productiontype != "AllTypes")
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, ProductionTypeText as ProductionType, sum(ActualGenerationOutput) as ActualGenerationOutputByMonthValue FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND ProductionTypeText= '+ "'" +req.params.productiontype+"'" +' AND Year ='+ req.params.year + ' GROUP BY AggregatedGenerationPerType.Month';
			else 
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, ProductionTypeText as ProductionType, sum(ActualGenerationOutput) as ActualGenerationOutputByMonthValue FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND Year ='+ req.params.year + ' GROUP BY AggregatedGenerationPerType.Month, ProductionType.Id';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month')  {
			if (req.params.productiontype != "AllTypes")
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, ProductionTypeText as ProductionType, sum(ActualGenerationOutput) as ActualGenerationOutputByDayValue FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND ProductionTypeText='+ "'" +req.params.productiontype+"'" +' AND Year ='+ req.params.year + ' AND Month=' + req.params.day+ ' GROUP BY AggregatedGenerationPerType.Day';
			else 
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, ProductionTypeText as ProductionType, sum(ActualGenerationOutput) as ActualGenerationOutputByDayValue FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND Year ='+ req.params.year + ' AND Month=' + req.params.day+ ' GROUP BY AggregatedGenerationPerType.Day, ProductionType.Id';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date')  {
			if (req.params.productiontype != "AllTypes")
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, DateTime as DateTimeUTC, ProductionTypeText as ProductionType, ActualGenerationOutput as ActualGenerationOutputValue, UpdateTime as UpdateTimeUTC FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND ProductionTypeText='+ "'" +req.params.productiontype+"'" +' AND Year ='+ req.params.year + ' AND Month='+ req.params.mon +' AND Day=' + req.params.day + ' ORDER BY DateTime ASC';
			else 
				let sql='SELECT "entso-e" as Source, "AggregatedGenerationPerType" as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, DateTime as DateTimeUTC, ProductionTypeText as ProductionType, ActualGenerationOutput as ActualGenerationOutputValue, UpdateTime as UpdateTimeUTC FROM  AggregatedGenerationPerType, AreaTypeCode, MapCode, ResolutionCode, ProductionType WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND ProductionType.Id = ProductionTypeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND Year ='+ req.params.year + ' AND Month='+ req.params.mon +' AND Day=' + req.params.day + ' ORDER BY ProductionType.Id';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
});

app.get('/energy/api/AggregatedGenerationPerType/:areaname/:resolution/:d/:date/', (req, res) => {
	if (req.query.format == 'csv'){ //csv format
		if(req.params.d == 'year') {
			let sql='SELECT "entso-e" as Source, 'DayAheadTotalLoadForecast' as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, sum(TotalLoadValue) as DayAheadTotalLoadForecastByDayValue FROM DayAheadTotalLoadForecast, AreaTypeCode, MapCode, ResolutionCode WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND Year ='+ req.params.year + ' AND AreaName ='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' GROUP BY DayAheadTotalLoadForecast.Month';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month') {
			let sql='SELECT "entso-e" as Source, 'DayAheadTotalLoadForecast' as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, sum(TotalLoadValue) as DayAheadTotalLoadForecastByDayValue FROM DayAheadTotalLoadForecast, AreaTypeCode, MapCode, ResolutionCode WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND Year ='+ req.params.year + ' AND Month ='+ req.params.mon +' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND AreaName ='+"'"+req.params.areaname+"'"+' GROUP BY DayAheadTotalLoadForecast.Day';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT "entso-e" as Source, 'DayAheadTotalLoadForecast' as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, Datetime as DateTimeUTC, TotalLoadValue as DayAheadTotalLoadForecastValue, UpdateTime as UpdateTimeUTC FROM DayAheadTotalLoadForecast, AreaTypeCode, MapCode, ResolutionCode WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND ProductionTypeText='+ "'" +req.params.productiontype+"'" +' AND Year ='+ req.params.year + ' AND Month='+ req.params.mon +' AND Day=' + req.params.day + ' ORDER BY DateTime ASC';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
	else {  //JSON format
		if(req.params.d == 'year')  {
			let sql='SELECT "entso-e" as Source, 'DayAheadTotalLoadForecast' as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, sum(TotalLoadValue) as DayAheadTotalLoadForecastByDayValue FROM DayAheadTotalLoadForecast, AreaTypeCode, MapCode, ResolutionCode WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND Year ='+ req.params.year + ' AND AreaName ='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' GROUP BY DayAheadTotalLoadForecast.Month';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month')  {
			let sql='SELECT "entso-e" as Source, 'DayAheadTotalLoadForecast' as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, sum(TotalLoadValue) as DayAheadTotalLoadForecastByDayValue FROM DayAheadTotalLoadForecast, AreaTypeCode, MapCode, ResolutionCode WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND Year ='+ req.params.year + ' AND Month ='+ req.params.mon +' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND AreaName ='+"'"+req.params.areaname+"'"+' GROUP BY DayAheadTotalLoadForecast.Day';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT "entso-e" as Source, 'DayAheadTotalLoadForecast' as Dataset, AreaName, AreaTypeCodeText as AreaTypeCode, MapCodeText as MapCode, ResolutionCodeText as ResolutionCode, Year, Month, Day, Datetime as DateTimeUTC, TotalLoadValue as DayAheadTotalLoadForecastValue, UpdateTime as UpdateTimeUTC FROM DayAheadTotalLoadForecast, AreaTypeCode, MapCode, ResolutionCode WHERE AreaTypeCode.Id = AreaTypeCodeId AND MapCode.Id = MapCodeId AND ResolutionCode.Id = ResolutionCodeId AND AreaName='+"'"+req.params.areaname+"'"+' AND ResolutionCodeText='+ "'" +req.params.resolution+"'" +' AND ProductionTypeText='+ "'" +req.params.productiontype+"'" +' AND Year ='+ req.params.year + ' AND Month='+ req.params.mon +' AND Day=' + req.params.day + ' ORDER BY DateTime ASC';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
});

app.get('/energy/api/ActualvsForecast/:areaname/:resolution/:d/:date/', (req, res) => {
	if (req.query.format == 'csv'){ //csv format
		if(req.params.d == 'year')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
        		if(err) throw err;
        		if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			var csv=convertToCSV(result);
        			res.send(csv);}
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
	else {  //JSON format
		if(req.params.d == 'year') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'month')  {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else if(req.params.d == 'date') {
			let sql='SELECT * FROM AreaTypeCode';
			con.query(sql, (err, result) => {
				if (result==''){
        			console.log('empty');
        			res.status(403).send('ERROR 403'); 
        		}
        		else{
        			res.send(result);}
        		console.log('Results returned');
			});
		}
		else res.status(404).send('ERROR 404')}
});

app.listen(port, () => console.log(`App listening on port ${port}!`))
